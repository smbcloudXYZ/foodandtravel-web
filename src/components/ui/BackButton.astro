---
import { SITE } from '@/config'
---

<a
  href="/"
  class="inline-flex items-center gap-1 font-serif text-m italic leading-[1.75] text-food-brown hover:text-food-orange transition-colors w-32 mb-10 px-0 py-0 bg-transparent border-none no-underline"
>
  <svg
    width="16"
    height="16"
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    class="w-3 h-3 flex-shrink-0"
  >
    <path
      d="M2.5 6.5H9.5C11.1569 6.5 12.5 7.84315 12.5 9.5V9.5C12.5 11.1569 11.1569 12.5 9.5 12.5H7.5M2.5 6.5L5.5 9.5M2.5 6.5L5.5 3.5"
      stroke="currentColor"
      stroke-width="1.25"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
  </svg>
  index
</a>

<script
  is:inline
  define:vars={{
    contentWidth: SITE.contentWidth,
    centeredLayout: SITE.centeredLayout,
    toc: SITE.toc
  }}
>
  ;(function () {
    // Adjust back button position based on layout and screen size
    function adjustBackButtonPosition() {
      const button = document.querySelector('.back-button')
      if (!button) return

      // If not using centered layout, remove fixed positioning
      if (!centeredLayout) {
        button.classList.remove('fixed-position')
        button.style.left = ''
        return
      }

      // Calculate available margin space for positioning
      const pageWidth = window.innerWidth
      const contentWidthValue = parseFloat(contentWidth)
      const margin = (pageWidth - contentWidthValue * 16) / 2
      const baseMinSpace = 11 * 16 // Base minimum space needed
      // If toc is enabled, need additional 2.5rem (40px) space
      const minSpace = toc ? baseMinSpace + 40 : baseMinSpace

      // Position button fixed on the left if there's enough space
      if (margin >= minSpace) {
        button.classList.add('fixed-position')
        const basePosition = margin - baseMinSpace
        // If toc is enabled, move 2.5rem (40px) further left
        const leftPosition = toc ? basePosition - 40 : basePosition
        button.style.left = `${leftPosition}px`
      } else {
        button.classList.remove('fixed-position')
        button.style.left = ''
      }
    }

    adjustBackButtonPosition()

    document.addEventListener('astro:page-load', () => {
      adjustBackButtonPosition()
    })
    document.addEventListener('DOMContentLoaded', () => {
      adjustBackButtonPosition()
    })
    window.addEventListener('resize', adjustBackButtonPosition)
  })()
</script>

<!-- Tailwind utility classes are now used for styling. Custom CSS removed. -->
