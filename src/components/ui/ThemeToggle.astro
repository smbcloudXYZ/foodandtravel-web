---
import { SITE } from '@/config'
---

{
  SITE.themeToggle && (
    <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
      <div class="theme-icon hollow-circle" />
      <div class="theme-icon solid-circle" />
    </button>
  )
}

<script is:inline>
  window.addEventListener('DOMContentLoaded', function () {
    const htmlElement = document.documentElement

    // Get system theme preference
    function getSystemTheme() {
      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches
      return isDark ? 'dark' : 'light'
    }

    // Get current actual theme state
    function getCurrentTheme() {
      const hasLight = htmlElement.classList.contains('light')
      const hasDark = htmlElement.classList.contains('dark')

      if (hasLight) {
        return 'light'
      }
      if (hasDark) {
        return 'dark'
      }

      const systemTheme = getSystemTheme()
      return systemTheme
    }

    // Apply theme
    function applyTheme(theme) {
      htmlElement.classList.remove('light', 'dark')

      if (theme === 'dark') {
        htmlElement.classList.add('dark')
      } else {
        htmlElement.classList.add('light')
      }
    }

    // Initialize theme - ensure explicit classes are always present
    function initTheme() {
      const systemTheme = getSystemTheme()
      applyTheme(systemTheme)
    }

    // Listen for system theme changes
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')
    mediaQuery.addEventListener('change', function (e) {
      const newTheme = e.matches ? 'dark' : 'light'
      applyTheme(newTheme)
    })

    // Get theme toggle button (only if it exists)
    const themeToggle = document.getElementById('theme-toggle')
    if (themeToggle) {
      // Toggle theme function
      function toggleTheme() {
        const currentTheme = getCurrentTheme()
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark'
        applyTheme(newTheme)
      }

      themeToggle.addEventListener('click', function (e) {
        e.preventDefault()
        e.stopPropagation()
        toggleTheme()
      })
    }

    initTheme()
  })
</script>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    height: 1.5rem;
    gap: 0.325rem;
    color: var(--text-primary);
    transition: opacity 0.2s ease;
    padding: 0;
    position: relative;
  }

  .theme-toggle:hover {
    opacity: 0.7;
  }

  .theme-toggle:active {
    opacity: 0.5;
  }

  .theme-icon {
    width: 0.5625rem;
    height: 0.5625rem;
    transition: all 0.2s ease;
  }

  .hollow-circle {
    border: none;
    border-radius: 50%;
    box-shadow: inset 0 0 0 1.5px var(--text-primary);
  }

  .solid-circle {
    background-color: var(--text-primary);
    border-radius: 50%;
  }
</style>
